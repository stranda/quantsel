                     carry=(1.50 * (sqrt((locs[,3]-locs[,1])*(locs[,4]-locs[,2])))),
                     extinct=rep(0.05,rland$intparam$habitat),
                     leftx=locs[,1],
                     rightx=locs[,3],
                     boty=locs[,2],
                     topy=locs[,4],
                     maxland=c(min(locs[1]),min(locs[2]),max(locs[3]),max(locs[4])))
  
  rland <- landscape.new.locus(rland,type=0,ploidy=1,mutationrate=0.005,numalleles=3,
                     frequencies=c(.2,.2,.6),transmission=1)

  rland <- landscape.new.locus(rland,type=1,ploidy=2,mutationrate=0.001,transmission=0,numalleles=5)
  rland <- landscape.new.locus(rland,type=1,ploidy=2,mutationrate=0.001,transmission=0,numalleles=5)
  rland <- landscape.new.locus(rland,type=1,ploidy=2,mutationrate=0.001,transmission=0,numalleles=5)

  rland <- landscape.new.locus(rland,type=0,ploidy=2,mutationrate=0.001,transmission=0,numalleles=5)


  expmat <- cbind(c(0,0.3,0.3,0.4,0,0,0),c(0,0.7,0.25,0.05,0,0,0))
  hsq <- c(0.9,0.9)
  rland <- landscape.new.expression(rland,expmat=expmat,hsq=hsq)

rland$intparam$habitats
rland$intparam$stages
round(runif(2*rland$intparam$habitat,
                                            min=0,
                                            max=initpopsize/1.5))
initpopsize <- 150
round(runif(2*rland$intparam$habitat,
                                            min=0,
                                            max=initpopsize/1.5))
q()
n
library(kernelPop2)
l=landscape.new.example()
q()
n
library(kernelPop2)
l=landscape.new.example()
library(kernelPop2)
q()
n
library(kernelPop2)
library(kernelPop2)
l=landscape.new.example()
q()
n
library(kernelPop2)
l=landscape.new.example()
q()
n
library(kernelPop2)
l=landscape.new.example()
q()
n
library(kernelPop2)
l=landscape.new.example()
q()
n
library(kernelPop2)
l=landscape.new.example()
q()
n
library(kernelPop2)
l=landscape.new.example()
q()
n
library(kernelPop2)
l=landscape.new.example()
landscape.plot.locations(l)
l$individuals
l = landscape.simulate(l,10)
landscape.plot.locations(l)
l = landscape.simulate(l,100)
landscape.plot.locations(l)
l=landscape.new.example()
landscape.plot.locations(l)
l = landscape.simulate(l,100)
landscape.plot.locations(l)
l$expression
l <- landscape.new.example()
l$expression
rland$expression
rland$expression
q()
n
library(kernelPop2);l=landscape.new.example()
q()
n
library(kernelPop2);l=landscape.new.example()
q()
n
library(kernelPop2);l=landscape.new.example()
q()
n
library(kernelPop2);l=landscape.new.example()
l$intparam
rland$intparam
rland$intparam$nphen=2
rland$expression
length(rland$loci)
q()
n
library(kernelPop2);l=landscape.new.example()
l$expression
q()
n
library(kernelPop2);l=landscape.new.example()
l$expression
q()
n
library(kernelPop2);l=landscape.new.example()
l$expression
  rland <- NULL
  rland <- landscape.new.empty()
  rland <- landscape.new.intparam(rland, h=20, s=2,np=0,totgen=20000)
  rland <- landscape.new.switchparam(rland,mp=0)
  rland <- landscape.new.floatparam(rland,s=0,seedscale=c(90,600),
                                    seedshape=c(1,200),seedmix=c(1),
                                    pollenscale=c(50,50),pollenshape=c(1,1),
                                    pollenmix=1 )


  S <- matrix(c(
                  0.33, 0,
                0.0175, 0
                ), byrow=T, nrow = 2)
  R <- matrix(c(
                0, 400,
                0,   0
                ), byrow=T, nrow = 2)
  M <- matrix(c(
                0, 0,
                0, 1
                ), byrow=T, nrow = 2)

  rland <- landscape.new.local.demo(rland,S,R,M)
  
  S <- matrix(rep(0,(2*rland$intparam$habitat)^2), nrow = 2*rland$intparam$habitat)
  R <- matrix(rep(0,(2*rland$intparam$habitat)^2), nrow = 2*rland$intparam$habitat)
  M <- matrix(rep(0,(2*rland$intparam$habitat)^2), nrow = 2*rland$intparam$habitat)

  locs <- landscape.generate.locations(npop=rland$intparam$habitat,
                             xrange=c(0,15000),yrange=c(0,15000),
                             sizexkernel=c(500,65),sizeykernel=c(500,65)
                             )
  
  rland <- landscape.new.epoch(rland,S=S,R=R,M=M,
                     carry=(1.50 * (sqrt((locs[,3]-locs[,1])*(locs[,4]-locs[,2])))),
                     extinct=rep(0.05,rland$intparam$habitat),
                     leftx=locs[,1],
                     rightx=locs[,3],
                     boty=locs[,2],
                     topy=locs[,4],
                     maxland=c(min(locs[1]),min(locs[2]),max(locs[3]),max(locs[4])))
  
  rland <- landscape.new.locus(rland,type=0,ploidy=1,mutationrate=0.005,numalleles=3,
                     frequencies=c(.2,.2,.6),transmission=1)

  rland <- landscape.new.locus(rland,type=1,ploidy=2,mutationrate=0.001,transmission=0,numalleles=5)
  rland <- landscape.new.locus(rland,type=1,ploidy=2,mutationrate=0.001,transmission=0,numalleles=5)
  rland <- landscape.new.locus(rland,type=1,ploidy=2,mutationrate=0.001,transmission=0,numalleles=5)

  rland <- landscape.new.locus(rland,type=0,ploidy=2,mutationrate=0.001,transmission=0,numalleles=5)


  expmat <- cbind(c(0,0.3,0.3,0.4,0,0,0),c(0,0.7,0.25,0.05,0,0,0))
  hsq <- c(0.9,0.9)
  rland <- landscape.new.expression(rland,expmat=expmat,hsq=hsq)

  initpopsize <- 150
rland$expression
l$individuals
l$loci
l$individuals
q()
n
library(kernelPop2);l=landscape.new.example()
q()
n
library(kernelPop2);l=landscape.new.example()
n
q()
n
library(kernelPop2);l=landscape.new.example()
l$expression
q()
n
library(kernelPop2);l=landscape.new.example()
l$expression
q()
n
library(kernelPop2);l=landscape.new.example()
l$expression
library(kernelPop2);l=landscape.new.example()
l$expression
q()
n
library(kernelPop2);l=landscape.new.example()
l$expression
q()
n
library(kernelPop2);l=landscape.new.example()
l$expression
grep
q()
n
library(kernelPop2);l=landscape.new.example()
l$expression

landscape.l2w <-
    function(Rland,numind)
{
    .Call("l2w",Rland,numind,PACKAGE = "kernelPop2")
}

landscape.l2w(l,10)
dim(landscape.l2w(l,10))
length(landscape.l2w(l,10))
dim(l$individuals)
10800/18
landscape.l2w
q()
n
library(kernelPop2);l=landscape.new.example()
landscape.phenotypes
landscape.phenotype(l)
landscape.phenotype <- function(rland)
{

    .Call("phenotypes",rland,PACKAGE = "kernelPop2")

}

landscape.phenotype(l)
k
library(kernelPop2);l=landscape.new.example()
landscape.phenotype <- function(rland)
{

    .Call("phenotypes",rland,PACKAGE = "kernelPop2")

}

l2=l
l2$individuals=l2$individuals[1:10,]
landscape.phenotype(l2)
k
library(kernelPop2);l=landscape.new.example()
q()
n
library(kernelPop2);l=landscape.new.example()
library(kernelPop2);l=landscape.new.example()
l2=l
l2$individuals=l2$individuals[1:10,]
l2$individuals
l2$individuals
l
l2
landscape.phenotype(l2)
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:10,]
landscape.phenotype(l2)
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:10,];landscape.phenotype(l2)
l2$expression
l2$individuals
landscape.phenotype(l2)
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:10,];landscape.phenotype(l2)

landscape.phenotypes.c <- function(rland)
{

    matrix(.Call("phenotypes",rland,PACKAGE = "kernelPop2"),
           ncol=rland$intparam$nphen)

}

landscape.phenotypes.c
landscape.phenotypes.c(l2)
l2$expression
l2$individuals
landscape.ploidy(l2)
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:10,];landscape.phenotypes.c(l2)
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:10,];landscape.phenotypes.c(l2)
landscape.locus.states(l2)
landscape.locus.states(1,l2)
landscape.locus.states(2,l2)
landscape.locus.states(3,l2)
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:10,];landscape.phenotypes.c(l2)
l2$expression
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:10,];landscape.phenotypes.c(l2)
l2$expression
l2$individuals
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:10,];landscape.phenotypes.c(l2)
t(landscape.phenotypes.c(l2))
c(landscape.phenotypes.c(l2))
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:10,];landscape.phenotypes.c(l2)
l2$individuals
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:10,];landscape.phenotypes.c(l2)
l2$individuals
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:10,];landscape.phenotypes.c(l2)
l2$individuals
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:10,];landscape.phenotypes.c(l2)
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:10,];landscape.phenotypes.c(l2)
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:10,];landscape.phenotypes.c(l2)
l2$individuals
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:10,];landscape.phenotypes.c(l2)
l2$individuals
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:10,];landscape.phenotypes.c(l2)
l2$individuals
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:10,];landscape.phenotypes.c(l2)
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:10,];landscape.phenotypes.c(l2)
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:10,];landscape.phenotypes.c(l2)
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:2,];landscape.phenotypes.c(l2)
l2$individuals
  rland <- landscape.new.locus(rland,type=1,ploidy=2,mutationrate=0.00,transmission=0,numalleles=2)
  rland <- landscape.new.locus(rland,type=1,ploidy=2,mutationrate=0.00,transmission=0,numalleles=2)
  rland <- landscape.new.locus(rland,type=0,ploidy=2,mutationrate=0.00,transmission=0,numalleles=2)


library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:2,];landscape.phenotypes.c(l2)
l2$individuals
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:2,];landscape.phenotypes.c(l2)
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:2,];landscape.phenotypes.c(l2)
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:2,];landscape.phenotypes.c(l2)
l2$individuals
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:2,];landscape.phenotypes.c(l2)
l2$individuals
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:2,];landscape.phenotypes.c(l2);l2$individuals
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:2,];landscape.phenotypes.c(l2);l2$individuals
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:2,];landscape.phenotypes.c(l2);l2$individuals
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:2,];landscape.phenotypes.c(l2);l2$individuals
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:2,];landscape.phenotypes.c(l2);l2$individuals
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:2,];landscape.phenotypes.c(l2);l2$individuals
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:2,];landscape.phenotypes.c(l2);l2$individuals
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:2,];landscape.phenotypes.c(l2);l2$individuals
l2$expression
l2$expression$expmat[1,1]=0.1
l2$expression$expmat[2,2]=0.1
landscape.phenotypes.c(l2);l2$individuals
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:2,];landscape.phenotypes.c(l2);l2$individuals
rland
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:2,];landscape.phenotypes.c(l2);l2$individuals
rland$gpmap
l$gpmap
l
l2
l
rland
rland
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:2,];landscape.phenotypes.c(l2);l2$individuals
l2
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:2,];landscape.phenotypes.c(l2);l2$individuals
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:2,];landscape.phenotypes.c(l2);l2$individuals
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:2,];landscape.phenotypes.c(l2);l2$individuals
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:2,];landscape.phenotypes.c(l2);l2$individuals
l2
library(kernelPop2);l=landscape.new.example();l2=l;l2$individuals=l2$individuals[1:2,];landscape.phenotypes.c(l2);l2$individuals
landscape.plot.locations(l)
landscape.plot.locations(landscape.simulate(l,10))
l=landscape.simulate(l,10)
l$gpmap
locs
  rland <- landscape.new.individuals(rland,
                         round(runif(2*rland$intparam$habitat,
                                     min=0,
                                     max=initpopsize/1.5)))
l=rland
landscape.plot.locations(l)
l=landscape.simulate(l,10)
landscape.plot.locations(l)
l=rland
landscape.allelefreq(l)
l=landscape.simulate(l,10)
landscape.allelefreq(l)
l$individuals
l=rland
landscape.allelefreq(l)
l=landscape.simulate(l,10)
landscape.allelefreq(l)
l=rland
landscape.allelefreq(l)
l=landscape.simulate(l,10)
landscape.allelefreq(l)
rland$gpmap
l=landscape.simulate(l,10)
landscape.allelefreq(l)
l=rland
l=landscape.simulate(l,10)
l
l=rland
l=landscape.simulate(l,10)
landscape.allelefreq(l)
l=rland
landscape.allelefreq(l)
l=landscape.simulate(l,1)
landscape.allelefreq(l)
l=rland
landscape.allelefreq(l)
l=landscape.simulate(l,1)
landscape.allelefreq(l)
l=landscape.simulate(l,10)
landscape.allelefreq(l)
l=rland
landscape.allelefreq(l)
landscape.allelefreq(l)
l=landscape.simulate(l,1)
landscape.allelefreq(l)
l=landscape.simulate(l,1)
landscape.allelefreq(l)
l=landscape.simulate(l,1)
landscape.allelefreq(l)
fim(l$individuals)
dim(l$individuals)
l=landscape.simulate(l,1)
dim(l$individuals)
landscape.allelefreq(l)
l=landscape.simulate(l,1)
landscape.allelefreq(l)
landscape.plot.locations(l)
l=landscape.simulate(l,1);landscape.plot.locations(l)
l=landscape.simulate(l,1);landscape.plot.locations(l)
l=landscape.simulate(l,1);landscape.plot.locations(l)
l=landscape.simulate(l,1);landscape.plot.locations(l)
l=landscape.simulate(l,1);landscape.plot.locations(l)
l=landscape.simulate(l,1);landscape.plot.locations(l)
l=landscape.simulate(l,1);landscape.plot.locations(l)
landscape.allelefreq(l)
l=landscape.simulate(l,5);landscape.plot.locations(l)
landscape.allelefreq(l)
l=landscape.simulate(l,5);landscape.plot.locations(l);landscape.allelefreq(l)
l$expression
landscape.phenotypes.c(l)
colMeans(landscape.phenotypes.c(l))
l=landscape.simulate(l,5);landscape.plot.locations(l);landscape.allelefreq(l);colMeans(landscape.phenotypes.c(l))
l=landscape.simulate(l,5);landscape.plot.locations(l);landscape.allelefreq(l);colMeans(landscape.phenotypes.c(l))
source("test.R")
source("../test.R")
source("../test.R")
tmp=landscape.simulate(l.old,1)
tmp
tmp$intparam
l.orig$intparam
l.old$intparam
l.old$individuals
source("../test.R")
source("../test.R")
source("../test.R")
getwd()
dbeta(0,1,1)
dbeta(0,10,1)
dom=seq(0,1,0.01)
plot(dbeta(dom,1,1)~dom,type="l")
plot(dbeta(dom,10,10)~dom,type="l")
plot(dbeta(dom,10,8)~dom,type="l")
db <- function(dom,a,b){dbeta(dom,a,b)/max(dbeta(dom,a,b))}
plot(db(dom,10,8)~dom,type="l")
plot(db(dom,100,88)~dom,type="l")
plot(db(dom,.9,.9)~dom,type="l")
plot(db(dom,.1,.1)~dom,type="l")
plot(db(dom,.01,.01)~dom,type="l")
plot(db(dom,.5,.5)~dom,type="l")
plot(db(dom,5,1)~dom,type="l")
plot(db(dom,1,5)~dom,type="l")
plot(db(dom,2,5)~dom,type="l")
plot(db(dom,2,0)~dom,type="l")
plot(db(dom,2,1)~dom,type="l")
plot(db(dom,1,2)~dom,type="l")
plot(db(dom,1.1,2)~dom,type="l")
plot(db(dom,1.1,2.1)~dom,type="l")
plot(db(dom,1,3)~dom,type="l")
plot(db(dom,1,1)~dom,type="l")
plot(db(dom,1,1.5)~dom,type="l")
plot(db(dom,1,2)~dom,type="l")
plot(dbeta(dom,0.5,0.5)~dom,type="l")
plot(db(dom,0.5,0.5)~dom,type="l")
plot(dbeta(dom,0.5,0.5)~dom,type="l")
db
max(dbeta(dom,0.5,0.5))
max(dbeta(dom,0.4,0.4))
plot(dbeta(dom,0.4,0.4)~dom,type="l")
plot(dbeta(dom,0.1,0.1)~dom,type="l")
plot(dbeta(dom,0.9,0.9)~dom,type="l")
max(dbeta(dom,0.9,0.9))
dbeta(0,0.4,0.4)
dbeta(0.0001,0.4,0.4)
dbeta(0.0,1,1)
dbeta(0.0,0.9999,0.99999)
dbeta(0.0,10,10)
dbeta(1.0,10,10)
plot(dbeta(dom,1,1)~dom,type="l")
plot(dbeta(dom,2,2)~dom,type="l")
plot(dbeta(dom,3,3)~dom,type="l")
plot(dbeta(dom,30,30)~dom,type="l")
plot(db(dom,30,30)~dom,type="l")
plot(db(dom,30,25)~dom,type="l")
db(dom,10,10)
db(dom,10,100)
dbeta(dom,10,100)
q()
n
