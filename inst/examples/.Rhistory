rm(list=ls())
initpopsize=500
source("testCrash.R")
dev.off()
x11()
source("testCrash.R")
for (i in 0:4) for (j in 0:3) print(paste(i,", ",j," ,",i+j*5))
for (i in 0:4) for (j in 0:3) print(paste0(i,", ",j," ,",i+j*5))
for (i in 0:4) for (j in 0:3) print(paste0(i,", ",j,", ",i+j*5))
rland$expression
rland$gpmap
rland$gpmap
rland$gpmap
1^10
1^100
0^10
log(0.5)
log(2)
log10(2)
log10(0.5)
log(1)
1/(1+exp(1))
1/(1+exp(2))
1/(1+exp(0.5))
1/(1+exp(0))
1/(1+exp(-1*1*(0)))
1/(1+exp(-1*1*(1)))
1/(1+exp(-1*1*(-1)))
l <- function(x,x0,L,k){L/(1+exp(-1*k*(x-x0)))}
l(1,0,1,1)
dom=seq(-2,2,0.1)
dom
plot(l(dom,0,1,1)~dom,type="l")
plot(l(dom,0,1,10)~dom,type="l")
plot(l(dom,0,1,0)~dom,type="l")
plot(l(dom,0,1,1)~dom,type="l")
plot(l(dom,0,1,.1)~dom,type="l")
plot(l(dom,0,0.2,.1)~dom,type="l")
dom=seq(-10,10,0.1)
plot(l(dom,0,0.2,.1)~dom,type="l")
plot(l(dom,0,1,.1)~dom,type="l")
l2 <- function(x,x0,L,k){(L/(1+exp(-1*k*(x-x0)))) - (l/2)}
plot(l2(dom,0,1,.1)~dom,type="l")
l2 <- function(x,x0,L,k){(L/(1+exp(-1*k*(x-x0)))) - (L/2)}
plot(l2(dom,0,1,.1)~dom,type="l")
plot(exp(l2(dom,0,1,.1))~dom,type="l")
plot(exp(l2(dom,0,1,1))~dom,type="l")
l2
dom=seq(-3,3,0.1)
plot(exp(l2(dom,0,1,1))~dom,type="l")
plot(l2(dom,0,1,1)~dom,type="l")
plot(l2(dom,0,1,10)~dom,type="l")
plot(l2(dom,0,0.2,10)~dom,type="l")
dom=seq(-1,1,0.1)
plot(l2(dom,0,0.2,10)~dom,type="l")
plot(l2(dom,0,0.2,1)~dom,type="l")
plot(l2(dom,0,0.2,.1)~dom,type="l")
plot(l2(dom,0,0.2,1)~dom,type="l")
plot(l2(dom,0,0.2,2)~dom,type="l")
plot(l2(dom,0,0.2,4)~dom,type="l")
l3 <- function(x,x0,L,k){tmp=(1-L)+l2(dom,x0,L,k);tmp}
plot(l3(dom,0,0.2,4)~dom,type="l")
l3 <- function(x,x0,L,k){tmp=1+l2(dom,x0,L,k);tmp}
plot(l3(dom,0,0.2,4)~dom,type="l")
l3 <- function(x,x0,L,k){tmp=1+l2(dom,x0,L,k);tmp/max(tmp)}
plot(l3(dom,0,0.2,4)~dom,type="l")
l3 <- function(x,x0,L,k){tmp=l2(dom,x0,L,k);(tmp/max(tmp))}
plot(l3(dom,0,0.2,4)~dom,type="l")
l3 <- function(x,x0,L,k){tmp=l2(dom,x0,L,k);(1-L)*(tmp/max(tmp))}
plot(l3(dom,0,0.2,4)~dom,type="l")
l3 <- function(x,x0,L,k){tmp=l2(dom,x0,L,k);(1-L)+(tmp/max(tmp))}
plot(l3(dom,0,0.2,4)~dom,type="l")
l3 <- function(x,x0,L,k){tmp=l2(dom,x0,L,k);tmp}
plot(l3(dom,0,0.2,4)~dom,type="l")
l3 <- function(x,x0,L,k){tmp=l2(dom,x0,L,k);tmp+(L/2)}
plot(l3(dom,0,0.2,4)~dom,type="l")
l3 <- function(x,x0,L,k){tmp=l2(dom,x0,L,k);tmp=tmp+(L/2);tmp/max(tmp)}
plot(l3(dom,0,0.2,4)~dom,type="l")
l2
l2 <- function(x,x0,L,k){(L/(1+exp(-1*k*(x-x0))))}
plot(l2(dom,0,0.2,4)~dom,type="l")
plot(l2(dom,0.5,0.2,4)~dom,type="l")
dom=seq(0,1,0.05)
plot(l2(dom,0.5,0.2,4)~dom,type="l")
plot(l2(dom,0.5,0.2,10)~dom,type="l")
l2 <- function(x,x0,L,k){(L/(1+exp(-1*k*(x-x0))))}
plot(l2(dom,0.5,1,10)~dom,type="l")
l2 <- function(x,x0,L,k){(L/(1+exp(-1*k*(x-x0))))}
l3 <- function(x,x0,L,k){tmp=l2(dom,x0,L,k);tmp/max(tmp)}
plot(l3(dom,0.5,1,10)~dom,type="l")
l3 <- function(x,x0,L,k){tmp=l2(dom,x0,L,k);L*tmp/max(tmp)}
plot(l3(dom,0.5,1,10)~dom,type="l")
l2 <- function(x,x0,k){(1/(1+exp(-1*k*(x-x0))))}
l3 <- function(x,x0,L,k){tmp=l2(dom,x0,k);L*tmp/max(tmp)}
plot(l3(dom,0.5,1,10)~dom,type="l")
plot(l3(dom,0.5,.1,10)~dom,type="l")
l3 <- function(x,x0,L,k){tmp=l2(dom,x0,k);(1-L)+L*tmp/max(tmp)}
plot(l3(dom,0.5,.1,10)~dom,type="l")
l3 <- function(x,x0,L,k){tmp=l2(dom,x0,k);(1-L/2)+L*tmp/max(tmp)}
plot(l3(dom,0.5,.1,10)~dom,type="l")
plot(l3(dom,0.5,.1,1)~dom,type="l")
plot(l3(dom,0.5,.1,.1)~dom,type="l")
plot(l3(dom,0.5,.1,.01)~dom,type="l")
plot(l3(dom,0.5,.1,.001)~dom,type="l")
plot(l3(dom,0.5,.1,5)~dom,type="l")
l2
lg
l2
l3
q()
n
initpopsize=500
source("testCrash.R")
source("testCrash.R")
source("testCrash.R")
source("testCrash.R")
source("testCrash.R")
source("testCrash.R")
source("testCrash.R")
source("testCrash.R")
source("testCrash.R")
q()
n
source("testCrash.R")
initpopsize=100
source("testCrash.R")
source("testCrash.R")
0.95-1
-1*(0.95-1)
q()
n
initpopsize=100
x11()
source("testCrash.R")
-1*(0.95-1)
q()
n
initpopsize=100;x11()
source("testCrash.R")
rland$gpmap
rland$individuals
q()
n
initpopsize=100;x11()
initpopsize=100;x11();source("testCrash.R")
q()
q()
n
initpopsize=100;x11();source("testCrash.R")
initpopsize=100;x11();source("simpleTest.R")
q()
n
initpopsize=100;x11();source("simpleTest.R")
q()
n
initpopsize=100;x11();source("simpleTest.R")
q()
n
initpopsize=100;x11();source("testCrash.R")
initpopsize=100;source("testCrash.R")
initpopsize=100;source("testCrash.R")
initpopsize=100;source("testCrash.R")
initpopsize=100;source("testCrash.R")
initpopsize=100;source("testCrash.R")
initpopsize=100;source("testCrash.R")
initpopsize=100;source("testCrash.R")
initpopsize=1000;source("testCrash.R")
getwd()
source("testFull.R")
source("testFull.R")
source("testFull.R")
source("testFull.R")
source("testFull.R")
source("testFull.R")
source("testFull.R")
source("testFull.R")
names(rland)
names(rland$demography)
rland
length(rland$plasticity)
rland$intparam
rland <- landscape.new.plasticity(rland)
rland$intparams
rland$intparam
rland <- landscape.new.plasticity(rland)
rland$plasticity
rland <- landscape.new.phenohab(rland)
rland$phenohab[[1]]
rland$phenohab[[4]]
names(rland)
names(rland$gpmap)
rland$intparam$habitats
names(rland$demography)
names(rland$demography$epochs[[1]])
names(rland)
rland$expression
names(rland)
q()
n
rland <- landscape.new.plasticity(rland)
getwd()
source("../../R/new.traits.R")
rland <- landscape.new.plasticity(rland)
rland$plasticity
phen=1
pm=NULL
(ncol(rland$plasticity)==rland$intparam$nphen)
(phen<=rland$intparam$nphen)
(is.null(pm))
dim(rland$plasticity)
rland$intparam$habitats
source("../../R/new.traits.R")
rland$plasticity <- NULL
rland <- landscape.new.plasticity(rland)
rland$plasticity
locs
locs
locs
locs
locs
locs
q()
n
str(rland$individuals)
landscape.simulate
source("../../R/new.traits.R")
source("../../R/new.traits.R")
dim(rland$individuals)
rland$phenohab
l$phenohab
q()
n
source("testSimple.R")
q()
n
source("testSimple.R")
source("testSimple.R")
db
getwd()
rland$phenohab
rland$plasticity
)
table(landscape.populations(rland))
is.landscape(rland)
Rland=rland
q()
n
is.landscape(rland)
rland$gpmap
rland$expression
rland$individuals
Rland=rland
is.null(Rland$gpmap)
if (is.null(Rland$gpmap)) {
        if (verb) {
            message("gpmap not found.")
        } 
        ok <- FALSE
    } else {
        if (dim(Rland$gpmap)[2]!=Rland$intparam$nphen) {
            if (verb) message("gpdemo does not have nphen columns")
            ok <- FALSE
.... [TRUNCATED] 
clear
rland$gpmap
gpdemo=rland$gpmap
sapply(1:length(rs),function(i){if(rs[i]>0) gpdemo[i,] <- gpdemo[i,]/rs[i]})
rs
gpdemo[1,]=c(0.3,0.7,0,0)
gpdemo[1,]=c(3,7,0,0)
rs
rland$plasticity
rland
rland <- landscape.new.plasticity(rland,
                                  matrix(c(
                                      1.5, 1, 1, 1,
                                      0.5, 1, 1, 1
                                      ),nrow=2,ncol=4,byrow=T)
)
q()
n
rland$plasticity
rland$gpmap
rland$phenohab
l$individuals
rland$individuals
l <- landscape.survive(rland)
l$individuals
rland$individuals
landscape.plot.phenotypes(rland,1)
par(mfrow=c(1,1))
landscape.plot.phenotypes(rland,1)
landscape.plot.phenotypes(rland,1)
landscape.plot.phenotypes(rland,1,heat.colors)
landscape.plot.phenotypes(rland,1,T,heat.colors)
phen=1
icol
summary(ph)
ph
q()
n
rland=l
landscape.phenotypes.c(rland,1)
landscape.phenotypes.c(rland)
phen=1
palletfunc=terrain.colors
landscape.plot.phenotypes(rland,1,T,heat.colors)
landscape.plot.phenotypes(rland,1,T,heat.colors)
landscape.plot.phenotypes(rland,1,T,heat.colors)
landscape.plot.phenotypes(rland,1,T,heat.colors)
landscape.plot.phenotypes(rland,1,T,heat.colors)
landscape.plot.phenotypes(rland,1,T,heat.colors)
landscape.plot.phenotypes(rland,1,T,heat.colors)
source("testPlasticity.R")
sumdf
p
p
names(sumdf)
reshape(sumdf,direction="long",idvar="pop",timevar="gen",varying=2:9)
reshape(sumdf,direction="long",ids="pop",times="gen",timevar=2:9)
reshape(sumdf,direction="long",ids="pop",times="gen",varying=2:9)
?reshape
reshape(sumdf,direction="long",ids="pop",times="gen",varying=names(sumdf)[2:9])
reshape(sumdf,direction="long",ids="pop",times="gen",varying=names(sumdf)[2:10])
reshape(sumdf,direction="long",ids="pop",times="gen",varying=list(names(sumdf)[2:10]))
reshape(sumdf,direction="long",ids="pop",times="gen",varying=names(sumdf)[2:10],sep="_")
reshape(sumdf,direction="long",ids="pop",times="gen",varying=names(sumdf)[2:9],sep="_")
reshape(sumdf,direction="long",ids="pop",times="gen",varying=names(sumdf)[2:9])
reshape(sumdf,direction="long",ids="pop",times="gen",varying=list(names(sumdf)[2:5],names(sumdf)[6:9]),drop=10)
library(reshape2)
library(tidy)
reshape(sumdf,direction="long",ids="pop",times="gen",varying=list(names(sumdf)[2:5],names(sumdf)[6:9]),drop=10,v.names=c("mean","sd"))
reshape(sumdf,direction="long",ids="pop",times="gen",varying=names(sumdf)[2:5],drop=6:10,v.names="mean")
reshape(sumdf,direction="long",ids="pop",times="gen",varying=2:5,times=2:5,drop=6:10,v.names="mean")
reshape(sumdf,direction="long",ids="pop",varying=2:5,times=2:5,drop=6:10,v.names="mean")
reshape(sumdf,direction="long",varying=2:5,times=2:5,drop=6:10,v.names="mean")
reshape(sumdf,direction="long",varying=2:5,times=2:5,drop=6:10,v.names="mean"))
head(reshape(sumdf,direction="long",varying=2:5,times=2:5,drop=6:10,v.names="mean"))
head(subdf)
head(sumdf)
head(reshape(sumdf,direction="long",varying=list(2:5,6:9),times=list(2:5,6:9),drop=10,v.names=c("mean","sd")))
head(reshape(sumdf,direction="long",varying=2:5,times=2:5,drop=6:10,v.names="mean"))
head(sumdf)
head(reshape(sumdf,direction="long",varying=2:5,times=2:5,drop=6:10,v.names="mean",sep="_"))
head(reshape(sumdf,direction="long",varying=2:5,times=2:5,drop=6:10,sep="_"))
head(reshape(sumdf,direction="long",varying=2:5,times=2:5,drop=6:10,v.names="mean",sep="_"))
reshape(sumdf,direction="long",varying=2:5,times=2:5,drop=6:10,v.names="mean",sep="_")
melt
head(sumdf)
library(tidyr)
gather(sumdf,key,value,-n)
gather(sumdf,key,value,-n) %>% head()
?gather
?pivot
?pivot_longer
pivot_longer(sumdf)
pivot_longer(sumdf,cols=starts_with("phen"))
q()
n
gather
gather(sumdf,cols=starts_with("phen"))
pivot_longer(sumdf,cols=ends_with("mean"))
pivot_longer(sumdf,cols=ends_with(c("mean","sd")))
)
sumdf
sumdf%>%filter(grepl("sd",variable))
sumdf%>%filter(grepl("!sd",variable))
sumdf%>%filter(grepl("mean",variable))
landscape.allelefreq(rland)
phenosumdf
head(phenosumdf)
head(afreqdf)
landscape.new.phenohab
rland$phenohab
source("testSimple.R")
source("testPlasticity_mt.R")
allreslst
onerep()->tmp
allreslst[[1]]
onerep()->tmp
names(tmp)
length(tmp)
names(tmp[[1]])
tmp[[1]]$phenosum
allreslst[[1]]
allreslst[[1]]
onerep
onerep
onerep()
onerep()
dev.off()
rm(list=ls())
onerep
onerep()
onerep()
source("testPlasticity_mt.R")
length(allreslst)
length(allreslst[[1]])
ar=1
head(phenosumdf)
phenosumdf
phenosumdf
phenosumdf
phenosumdf
phenosumdf
head(afreqsumdf)
names(allPhensum)
rland$phenohab
l
rland
source("testPlasticity.R")
rland$phenohab
landscape.new.phenohab
source("testPlasticity.R")
rland$phenohab
rland$phenohab
q()
n
source("testPlasticity.R")
rland$phenohab
rland$phenohab
rland$phenohab
ph
rland$phenohab
rland$phenohab
rland$phenohab=NULL
rland$phenohab
rland$phenohab
rland$phenohab
rland$phenohab
rland$phenohab
rland$phenohab
rland$phenohab
q()
n
rland$phenohab
rland$phenohab
dom=seq(0,1,0.01);plot(dbeta(dom,1,2)~dom)
q()
n
l$phenohab
l$gpmap
dbeta(0,1,2)
dbeta(0.5,1,2)
dbeta(1,1,2)
dbeta(5,5,2)
plot(dbeta(dom,2,2)~dom,type="l")
dom=seq(0,1,0.1)
plot(dbeta(dom,2,2)~dom,type="l")
plot(dbeta(dom,2,6)~dom,type="l")
plot(dbeta(dom,6,2)~dom,type="l")
plot(dbeta(dom,12,4)~dom,type="l")
getwd()
x11()
source("testFull.R")
landscape.new.intparam
source("testFull.R")
source("testFull.R")
source("testFull.R")
rland$individuals
unique(rland$individuals[,1])
table(rland$individuals[,1])
table(rland$individuals[,1])
table(l$individuals[,1])
source("testFull.R")
l$individuals
landscape.plot.phenotypes(rland,1)
landscape.plot.phenotypes(rland,1,F)
landscape.phenotypes.c(rland)->tmp
tmp[1:4,]
colMeans(tmp)
phen=1
is.landscape(rland, FALSE)
for (i in 1:rland$intparam$habitats) round(mean(ph[sites==i]),3)
for (i in 1:rland$intparam$habitats) cat(paste0("round(mean(ph[sites==i]),3)\n"))
for (i in 1:rland$intparam$habitats) cat(paste0(round(mean(ph[sites==i]),3),"\n"))
l$individuals
dim(l$individuals)
l$individuals
l=landscape.simulate(l,1)
l=landscape.simulate(l,1)
l=landscape.simulate(l,1)
l=landscape.simulate(l,1)
l=landscape.simulate(l,1)
l=landscape.simulate(l,1)
source("testFull.R")
source("testFull.R")
source("testFull.R")
source("testFull.R")
1024^0.5
40000/32
source("testFull.R")
source("fourloc/testSelFecundity.R")
source("testSelFecundity.R")
source("testFull.R")
source("testFull.R")
rland$intparam
rland$intparam$habitats
q()
n
